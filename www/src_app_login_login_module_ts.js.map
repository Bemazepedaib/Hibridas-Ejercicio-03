{"version":3,"file":"src_app_login_login_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;;AAAtB,sBAAsB;IAJlC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,sBAAsB;AAAA;;;;;;;;;;;;;;;;;;;;;;;AChBM;AACM;AACF;AAEA;AAEmB;AAEvB;IAW5B,eAAe,SAAf,eAAe;;AAAf,eAAe;IAT3B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,yEAAsB;SACvB;QACD,YAAY,EAAE,CAAC,kDAAS,CAAC;KAC1B,CAAC;GACW,eAAe;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACnBsB;AACT;AACQ;AACY;IAOhD,SAAS,SAAT,SAAS;IAKpB,YAAoB,MAAc,EAAU,EAAmB,EAAU,cAA8B;QAAnF,WAAM,GAAN,MAAM,CAAQ;QAAU,OAAE,GAAF,EAAE,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAE5G,QAAQ;IACR,CAAC;IAEK,KAAK;;YACT,IAAI,IAAI,CAAC,IAAI,IAAI,OAAO,IAAI,IAAI,CAAC,IAAI,IAAI,MAAM,EAAE;gBAC/C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAClB,CAAC,OAAO,CAAC,CACV;gBACD,IAAI,CAAC,IAAI,GAAG,EAAE;gBACd,IAAI,CAAC,IAAI,GAAG,EAAE;aACf;iBAAM;gBACL,IAAI,IAAI,CAAC,YAAY,EAAE,EAAE;oBACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAClB,CAAC,eAAe,CAAC,EACjB;wBACE,WAAW,EAAE,EAAE,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE;qBACrD,CAAC;oBACJ,IAAI,CAAC,IAAI,GAAG,EAAE;oBACd,IAAI,CAAC,IAAI,GAAG,EAAE;iBACf;qBAAM;oBACL,IAAI,KAAK,GAAG,MAAM,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC;wBAC/B,OAAO,EAAE,yBAAyB;wBAClC,QAAQ,EAAE,IAAI;qBACf,CAAC,CAAC;oBACH,KAAK,CAAC,OAAO,EAAE,CAAC;iBACjB;aACF;QACH,CAAC;KAAA;IAED,YAAY;QACV,IAAI,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC;QACjE,IAAI,EAAE,EAAE;YACN,IAAI,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE;gBAClC,OAAO,IAAI;aACZ;iBAAM;gBACL,OAAO,KAAK;aACb;SACF;aAAM;YACL,OAAO,KAAK;SACb;IACH,CAAC;;;;;;;AA/CU,SAAS;IALrB,wDAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kEAAgC;;KAEjC,CAAC;GACW,SAAS;AAAA","sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { StudentService } from '../services/student.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  public user: string\n  public pass: string\n\n  constructor(private router: Router, private tc: ToastController, private studentService: StudentService) { }\n\n  ngOnInit() {\n  }\n\n  async login() {\n    if (this.user == \"Admin\" && this.pass == \"test\") {\n      this.router.navigate(\n        ['/home']\n      )\n      this.user = \"\"\n      this.pass = \"\"\n    } else {\n      if (this.alumnoValido()) {\n        this.router.navigate(\n          ['/view-student'],\n          {\n            queryParams: { controlNumber: this.user.toString() }\n          })\n        this.user = \"\"\n        this.pass = \"\"\n      } else {\n        let toast = await this.tc.create({\n          message: 'Credenciales no v√°lidas',\n          duration: 1000\n        });\n        toast.present();\n      }\n    }\n  }\n\n  alumnoValido(): Boolean {\n    let ts = this.studentService.getStudentByControlNumber(this.user)\n    if (ts) {\n      if (ts.nip.toString() == this.pass) {\n        return true\n      } else {\n        return false\n      }\n    } else {\n      return false\n    }\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}